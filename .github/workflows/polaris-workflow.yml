name: CI-Polaris 
on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]  
jobs:
  polaris-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Polaris Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.4.0
        with:
          polaris_server_url: ${{ vars.POLARIS_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: ${{ github.event.repository.name }}
          polaris_project_name: ${{ github.event.repository.name }}
          polaris_assessment_types: "SCA,SAST"
          bridgecli_download_url: "https://repo.blackduck.com/bds-integrations-release/com/blackduck/integration/bridge/binaries/bridge-cli-bundle/3.8.0/bridge-cli-bundle-3.8.0-linux64.zip"
          # polaris_waitForScan: false  # Used to support the async mode
          # project_directory: ${{ vars.PROJECT_DIRECTORY }}
          ########### Uncomment below configuration for source code upload 
          polaris_assessment_mode: "SOURCE_UPLOAD"
          polaris_test_sast_location: 'hybrid'
          # project_source_archive: ${{ vars.PROJECT_SOURCE_ARCHIVE }}
          # project_source_excludes: ${{ vars.PROJECT_SOURCE_EXCLUDES }} # Accepts Multiple Values
          # project_source_preserveSymLinks: true
          ############ Uncomment below configuration if Bridge diagnostic files needs to be uploaded
          include_diagnostics: true
          ############ SARIF report generation and upload to GitHub Adavanced Security Tab: Uncomment below to enable
          polaris_reports_sarif_create: true  
          #polaris_reports_sarif_file_path: '/Users/renukac/test-sast/report.sarif.json' # File path (including file name) where SARIF report is created.
          # polaris_reports_sarif_severities: "CRITICAL,HIGH"
          # polaris_reports_sarif_groupSCAIssues: true 
          # polaris_reports_sarif_issue_types: 'SCA, SAST' 
          # polaris_upload_sarif_report: true 
          # github_token: ${{ secrets.GITHUB_TOKEN }} # Required when polaris_upload_sarif_report is set as true
          ###### Signature scan
          polaris_test_sast_type: "SAST_FULL"
 
          ##### Polaris Local scan analysis
          #polaris_test_sca_location: "hybrid"
          #polaris_test_sast_location: "local"
          ##### Uncomment below to add arbitrary CL parameters
          # detect_search_depth: 2
          # detect_args: '--detect.diagnostic=true'
          # detect_config_path: '/Users/Config/application.properties'
          # coverity_build_command: mvn clean install
          # coverity_clean_command: mvn clean
          # coverity_config_path: /Users/Config/coverity.yml
          # coverity_args: --config-override capture.build.build-command=mvn install
      - name: Polaris PR Scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.4.0
        with:
          polaris_server_url: ${{ vars.POLARIS_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: ${{ github.event.repository.name }}
          polaris_project_name: ${{ github.event.repository.name }}
          polaris_assessment_types: "SCA,SAST"
          # project_directory: ${{ vars.PROJECT_DIRECTORY }}
          ### Uncomment below configuration for source code upload 
          # project_source_archive: ${{ vars.PROJECT_SOURCE_ARCHIVE }}
          # project_source_excludes: ${{ vars.PROJECT_SOURCE_EXCLUDES }} # Accepts Multiple Values
          # project_source_preserveSymLinks: true
          ### Below configuration is used to enable feedback from Polaris security testing as pull request comment
          polaris_prComment_enabled: true 
          github_token: ${{ secrets.GITHUB_TOKEN }} 
          # Mandatory when polaris_prComment_enabled is set to 'true'
          ### Uncomment below configuration if Bridge diagnostic files needs to be uploaded
          include_diagnostics: true
