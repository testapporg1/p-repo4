# Polaris Bridge CLI Documentation: https://documentation.blackduck.com/bundle/bridge/page/documentation/c_complete-list-of-bridge-commands.html
name: Polaris Bridge CLI Scan
on:
  push:
    branches:
      - main
      - master
      - develop
      - stage
      - release
  pull_request:
    branches:
      - main
      - master
      - develop
      - stage
      - release
  workflow_dispatch: {}
permissions:
  contents: read
  pull-requests: write
  security-events: write
jobs:
  polaris:
    runs-on: ubuntu-latest
    env:
      BRIDGE_POLARIS_SERVERURL: ${{ vars.POLARIS_URL }}
      BRIDGE_POLARIS_ACCESSTOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN }}
      BRIDGE_POLARIS_ASSESSMENT_TYPES: SAST,SCA
      BRIDGE_POLARIS_APPLICATION_NAME: ${{ github.event.repository.name }}
      BRIDGE_POLARIS_PROJECT_NAME: ${{ github.event.repository.name }}
      BRIDGE_POLARIS_BRANCH_NAME: ${{ github.event.ref_name }}
      BRIDGE_POLARIS_WAITFORSCAN: "true"
      BRIDGE_POLARIS_REPORTS_SARIF_CREATE: "true"
      BRIDGE_POLARIS_UPLOAD_SARIF_REPORT: "true"
      BRIDGE_GITHUB_USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Download & Setup Bridge CLI
        run: |-
          BASE="https://repo.blackduck.com/bds-integrations-release/com/blackduck/integration/bridge/binaries/bridge-cli-bundle/latest"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pwsh -Command "Invoke-WebRequest $BASE/bridge-cli-bundle-win64.zip -OutFile bridge.zip; Expand-Archive bridge.zip $env:RUNNER_TEMP; echo BRIDGE_CLI=$(Get-ChildItem -Recurse $env:RUNNER_TEMP -Filter bridge-cli.exe | Select-Object -First 1) | Out-File $env:GITHUB_ENV -Append"
          else
            OS=$( [[ "$RUNNER_OS" == "macOS" ]] && ([[ $(uname -m) =~ arm ]] && echo macos_arm || echo macosx) || ([[ $(uname -m) =~ arm ]] && echo linux_arm || echo linux64 ))
            curl -sSL -o bridge.zip $BASE/bridge-cli-bundle-$OS.zip
            unzip -qo bridge.zip -d $RUNNER_TEMP
            echo BRIDGE_CLI=$(find $RUNNER_TEMP -name bridge-cli | head -n1) >> $GITHUB_ENV
          fi
      - name: Polaris Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        run: ${{ env.BRIDGE_CLI }} --stage polaris --diagnostics
      - name: Polaris PR Scan
        if: ${{ github.event_name == 'pull_request' }}
        run: |-
          ${{ env.BRIDGE_CLI }} --stage polaris  --diagnostics  \
             polaris.prcomment.enabled=true  \
             polaris.branch.parent.name=${{ github.event.base_ref }}  \
             github.repository.branch.name=${{ github.ref_name }}  \
             github.repository.name=${{ github.event.repository.name }}  \
             github.repository.owner.name=${{ github.repository_owner }}  \
             github.repository.pull.number=${{ github.event.number }}


      ### Uncomment below configuration to save logs
      # - name: Save Logs
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: bridge-logs
      #     path: ${{ github.workspace }}/.bridge